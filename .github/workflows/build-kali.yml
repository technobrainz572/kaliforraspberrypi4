name: Build Custom Kali ARM Image for Raspberry Pi 4

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      - name: Clean Submodules
        run: |
          git submodule deinit -f . || true
          git submodule update --init --recursive || true

      - name: Install Base Dependencies
        run: |
          sudo apt update
          sudo apt install -y git curl wget qemu-user-static debootstrap coreutils systemd-container gnupg \
            build-essential bc kmod libncurses-dev libelf-dev libssl-dev bison flex crossbuild-essential-arm64

      - name: Install kali-archive-keyring
        run: |
          wget https://kali.download/kali/pool/main/k/kali-archive-keyring/kali-archive-keyring_2024.1_all.deb
          sudo dpkg -i kali-archive-keyring_2024.1_all.deb
          rm kali-archive-keyring_2024.1_all.deb

      - name: Set Safe TERM Variable
        run: echo "TERM=xterm-256color" >> $GITHUB_ENV

      - name: Clone Kali ARM Build Scripts
        run: |
          git clone --recurse-submodules https://gitlab.com/kalilinux/build-scripts/kali-arm.git
          cd kali-arm
          chmod +x *.sh

      - name: Clone Raspberry Pi Kernel Source
        run: |
          git clone --depth=1 --branch rpi-6.6.y https://github.com/raspberrypi/linux.git
          cd linux
          git checkout rpi-6.6.y

      - name: Configure Custom Kernel for Pentesting
        run: |
          cd linux
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- bcm2711_defconfig
          sed -i 's/# CONFIG_BT_HCIUART is not set/CONFIG_BT_HCIUART=y/' .config
          sed -i 's/# CONFIG_BT_HCIUART_H4 is not set/CONFIG_BT_HCIUART_H4=y/' .config
          sed -i 's/# CONFIG_BT_HCIUSB is not set/CONFIG_BT_HCIUSB=y/' .config
          echo "CONFIG_CFG80211=y" >> .config
          echo "CONFIG_MAC80211=y" >> .config
          echo "CONFIG_RFKILL=y" >> .config
          echo "CONFIG_USB_STORAGE=y" >> .config
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- olddefconfig

      - name: Compile Custom Kernel
        run: |
          cd linux
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc) Image modules dtbs
          mkdir -p ../kernel-build/overlays
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- INSTALL_MOD_PATH=../kernel-build modules_install
          cp arch/arm64/boot/Image ../kernel-build/kernel8.img
          cp arch/arm64/boot/dts/broadcom/*.dtb ../kernel-build/
          cp arch/arm64/boot/dts/overlays/*.dtbo ../kernel-build/overlays/

      - name: Build Kali Image with Custom Kernel
        run: |
          cd kali-arm
          sudo bash -x ./raspberry-pi.sh 2>&1 | tee build.log
          # Debug: List all .img files and dir contents
          echo "Listing all .img files in repo:"
          find /home/runner/work -name "*.img"
          echo "Contents of images/ dir:"
          ls -la images/
          # Find the image file (widen search if needed)
          IMAGE_FILE=$(find . -name "kali-*.img" | head -n 1)
          if [ -z "$IMAGE_FILE" ]; then
            echo "Error: No Kali image file found anywhere"
            exit 1
          fi
          echo "Found image: $IMAGE_FILE"
          # Calculate boot partition offset
          OFFSET=$(sudo fdisk -l "$IMAGE_FILE" | grep -m1 'img1' | awk '{print $2 * 512}')
          if [ -z "$OFFSET" ]; then
            echo "Error: Could not determine offset, falling back to 4194304"
            OFFSET=4194304
          fi
          echo "Using offset: $OFFSET"
          sudo mkdir -p /mnt/boot
          sudo mount -o loop,offset=$OFFSET "$IMAGE_FILE" /mnt/boot || { echo "Mount failed with offset $OFFSET"; sudo fdisk -l "$IMAGE_FILE"; exit 1; }
          sudo cp ../kernel-build/kernel8.img /mnt/boot/
          sudo cp ../kernel-build/*.dtb /mnt/boot/
          sudo cp -r ../kernel-build/overlays /mnt/boot/
          sudo umount /mnt/boot

      - name: Install Pentesting Tools and Drivers
        run: |
          cd kali-arm
          sudo systemd-nspawn -D chroot /bin/bash -c "
            apt update
            apt install -y kali-linux-default aircrack-ng kismet bluez bluetooth bluez-tools btscanner dkms
            git clone https://github.com/aircrack-ng/rtl8188eus.git
            cd rtl8188eus
            make
            make install
            modprobe 8188eu
          "

      - name: Install CSR Bluetooth Firmware
        run: |
          cd kali-arm
          sudo systemd-nspawn -D chroot /bin/bash -c "
            apt update
            apt install -y firmware-linux firmware-linux-nonfree
            mkdir -p /lib/firmware
            wget -O /lib/firmware/BCM20702A0-0a12-0001.hcd \
              'https://github.com/RPi-Distro/firmware-nonfree/raw/master/brcm/BCM20702A0-0a12-0001.hcd'
          "

      - name: Compress Image
        run: |
          cd kali-arm/images
          xz -T0 -v *.img

      - name: Upload Build Logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: kali-arm/build.log
          if-no-files-found: warn

      - name: Upload Kali Linux Image
        uses: actions/upload-artifact@v4
        with:
          name: kali-linux-raspberrypi4-custom
          path: kali-arm/images/*.img.xz
          if-no-files-found: error
